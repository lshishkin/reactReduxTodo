{"ast":null,"code":"import _objectSpread from \"/home/leo/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/projects/react-test/reactReduxTodo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/home/leo/\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B/projects/react-test/reactReduxTodo/src/components/task/index.tsx\";\n\nimport React, { useEffect } from \"react\";\nimport { useFormik } from \"formik\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Button from '@material-ui/core/Button';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory } from \"react-router-dom\";\nimport { setTask } from \"../tasks/action\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nvar Task = function Task() {\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var history = useHistory();\n  var dispatch = useDispatch();\n  var task = useSelector(function (state) {\n    return state.tasks.tasks.find(function (item) {\n      return item.id.toString() === id.toString();\n    });\n  });\n  var load = useSelector(function (state) {\n    return state.tasks.load;\n  });\n  var user = useSelector(function (state) {\n    return state.tasks.users.find(function (item) {\n      return item.id.toString() === (task === null || task === void 0 ? void 0 : task.userId.toString());\n    });\n  });\n  var formik = useFormik({\n    initialValues: {\n      completed: '',\n      userName: '',\n      title: ''\n    },\n    onSubmit: function onSubmit(values) {\n      dispatch(setTask(_objectSpread(_objectSpread({}, task), {}, {\n        completed: JSON.parse(values.completed),\n        title: values.title\n      })));\n      history.push(\"/\");\n    }\n  });\n  useEffect(function () {\n    if (task && user) {\n      formik.setValues({\n        completed: task.completed.toString(),\n        userName: user.username,\n        title: task.title\n      });\n    }\n  }, [task, user]);\n  return load ? /*#__PURE__*/React.createElement(CircularProgress, {\n    disableShrink: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }\n  }) : /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: formik.handleSubmit,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Select, {\n    name: \"completed\",\n    onChange: formik.handleChange,\n    value: formik.values.completed,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"true\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, \"\\u0412\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"false\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, \"\\u041D\\u0435 \\u0432\\u044B\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u043E\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }, \"\\u0418\\u0441\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435\\u043B\\u044C\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    value: formik.values.userName,\n    variant: \"outlined\",\n    disabled: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, \"Email Address\"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    name: \"title\",\n    type: \"text\",\n    onChange: formik.handleChange,\n    value: formik.values.title,\n    variant: \"outlined\",\n    multiline: true,\n    rows: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    onClick: function onClick() {\n      return history.push(\"/\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"));\n};\n\nexport default Task;","map":{"version":3,"sources":["/home/leo/Документы/projects/react-test/reactReduxTodo/src/components/task/index.tsx"],"names":["React","useEffect","useFormik","useParams","useSelector","useDispatch","Button","Select","MenuItem","TextField","useHistory","setTask","CircularProgress","Task","id","history","dispatch","task","state","tasks","find","item","toString","load","user","users","userId","formik","initialValues","completed","userName","title","onSubmit","values","JSON","parse","push","setValues","username","handleSubmit","handleChange"],"mappings":"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","sourcesContent":["import React,{useEffect} from \"react\";\nimport { useFormik, } from \"formik\";\nimport { useParams } from \"react-router-dom\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Button from '@material-ui/core/Button';\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory } from \"react-router-dom\";\nimport { setTask, } from \"../tasks/action\";\nimport {UserInterface, TaskInterface} from '../tasks/types' \nimport {IApplicationState} from '../../store/types'\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Task = () => {\n  let { id } = useParams();\n  let history = useHistory();\n  const dispatch = useDispatch();\n  const task = useSelector((state:IApplicationState) => state.tasks.tasks.find((item:TaskInterface) => item.id.toString() === id.toString()));\n  const load = useSelector((state:IApplicationState) => state.tasks.load);const user = useSelector((state:IApplicationState) => state.tasks.users.find((item:UserInterface)=>item.id.toString()===task?.userId.toString()));\n  const formik = useFormik({\n    initialValues: {\n      completed: '',\n      userName: '',\n      title: ''\n    },\n    onSubmit: values => {\n      dispatch(setTask({...(task as TaskInterface),completed:JSON.parse(values.completed),title:values.title}))\n      history.push(`/`)\n    }\n  });\n\n\n  useEffect(() => {\n   if(task&&user){\n    formik.setValues({completed: task.completed.toString(),\n      userName: user.username,\n      title: task.title})\n   }\n  }, [task,user]);\n \n  return load? <CircularProgress disableShrink />:(\n    <form onSubmit={formik.handleSubmit}>\n      <label htmlFor=\"email\">Статус</label>\n      <br/>\n      <Select\n        name=\"completed\"\n        onChange={formik.handleChange}\n        value={formik.values.completed}\n      >\n        <MenuItem value={\"true\"}>Выполнено</MenuItem>\n        <MenuItem value={\"false\"}>Не выполнено</MenuItem>\n      </Select>\n      <br/>\n      <label htmlFor=\"email\">Исполнитель</label>\n      <br />\n      <TextField\n        name=\"title\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        value={formik.values.userName}\n        \n        variant=\"outlined\"\n        disabled\n\n      />\n      <br />\n      <label htmlFor=\"email\">Email Address</label>\n      <br />\n      <TextField\n        name=\"title\"\n        type=\"text\"\n        onChange={formik.handleChange}\n        value={formik.values.title}\n        variant=\"outlined\"\n        multiline\n        rows={4}\n      />\n      <br />\n    \n      <Button type=\"submit\" onClick={() => history.push(`/`)}>Отмена</Button>\n      <Button type=\"submit\">Сохранить</Button>\n    </form>\n  );\n};\n\nexport default Task;\n"]},"metadata":{},"sourceType":"module"}